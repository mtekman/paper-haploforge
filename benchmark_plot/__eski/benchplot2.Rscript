library(ggplot2)
library(grid)
library(gridExtra)
library(scales)

#Extract Legend 
g_legend<-function(a.gplot){ 
  tmp <- ggplot_gtable(ggplot_build(a.gplot)) 
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box") 
  legend <- tmp$grobs[[leg]] 
  return(legend)} 

broc1 <- read.table('tables/broccolli_runtimes_late.table', header= TRUE)
broc2 <- read.table('tables/broccolli_runtimes.latestlatest.table', header= TRUE)
broc3 <- read.table('tables/broccolli_runtimes.20170726.table', header=TRUE)
coppr1 <- read.table('tables/copper.runtimes.early.table', header=TRUE)
coppr2 <- read.table('tables/copper.20170621_1049.table', header=TRUE)
coppr3 <- read.table('tables/copper.20170626.table', head=TRUE)

data <- rbind(broc1,broc2,coppr1,coppr2, coppr3)

                                        # Populate nuclear families
trio1 <- data[data$NumRootFounder == 1 & (data$TotalPeople >= 3 & data$TotalPeople < 5),]
trio2 <- data[data$MaxGen == 2,]


print(nrow(data))

#alleleplots <- split(data, data$Allele)

print (names(data));
#print (names(alleleplots$`100`));


scaleFUN <- function(x) sprintf("%.0f", x)

p <- ggplot(NULL, aes(x=TimeRend,y=Allele, color=MaxGen, shape=factor(NumRootFounder))) +
 xlab("Time (ms)") +
 ylab("Number of Individuals") +
 scale_color_gradient(low="light grey", high="black", name="Generations" ) +
 scale_shape(name="Root Founders") +
 theme(
      legend.title = element_text(size=rel(0.7)),
      axis.text.y = element_text(size=rel(0.8)),
      axis.text.x = element_text(size=rel(0.8)),
      plot.margin = unit(c(0.1,0.2,1,0.2), "cm")
 )

p + geom_point(data=broc3)
quit()
                   
p <- p + geom_point(data=data);


legend <- g_legend( p );

# Styles applied to each of the four plots
p <- p + guides(shape=FALSE,size=FALSE,colour=FALSE) +
         theme(
                axis.title.x=element_blank(),
                axis.title.y=element_blank(),
                plot.caption = element_text(hjust=0.5, size=rel(1.3))
         );
         
         

AA <- p + xlim(0,1000) + ylim(0,400) + labs(caption="A");
BB <- p + xlim(0,35000) + ylim(0,4000) + labs(caption="B");
CC <- p + ylim(0,1000) + labs(caption="C") +
          scale_x_continuous(breaks=c(0,10000,20000,30000, 40000), limits=c(0,40000), labels=scaleFUN);
DD <- p + labs(caption="D") +
         scale_x_continuous(breaks=c(0, 300000, 600000, 900000), labels=scaleFUN)


title.grob <- textGrob(
    label = "Benchmark Timings for Sporadically Generated Pedigrees",
    x = unit(0, "lines"), 
    y = unit(0, "lines"),
    hjust = -0.5, vjust = 0,
    gp = gpar(fontsize = 16, fontface = "bold"))

laxis.grob <- textGrob(
   label = "Number of Individuals per Pedigree",
   x = unit(0.5, "npc"),   y = unit(0.5, "npc"),
   rot = 90,
   gp = gpar(fontsize = 14 ))


baxis.grob <- textGrob(
   label = "Run Times to Resolve and Render Haplotypes (ms)",
   x = unit(0.4, "npc"), y = unit(0, "npc"),
   vjust = -2,   
   rot = 0,
   gp = gpar(fontsize = 14 ))


svg(filename="generated_plots.svg", width=14, height=7)
#png(filename="generated_plots.png", width=2000, height=1200)
grid.arrange( arrangeGrob(AA, CC),  arrangeGrob(BB, DD), legend,
        top = title.grob, left = laxis.grob, bottom = baxis.grob,
        widths=c(2,2,1),
        ncol=3, as.table=TRUE)
dev.off()
